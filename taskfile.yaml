---
version: "3"

tasks:
  clean:
    cmds:
      - rm -f schemas.zip
      - rm -rf schemas
      - rm -rf vendor
      - rm -rf node_modules

  dev:
    cmds:
      - jsonnet dev.jsonnet -o dev.json
    env:
      JSONNET_PATH: "lib/:vendor/"

  install:
    cmds:
      - npm install
      - jb install

  format:
    dir: '1.0.0'
    cmds:
      - jsonnetfmt -i --indent 2 --max-blank-lines 2 --sort-imports --string-style s --comment-style s **/*.libsonnet
      - jsonnetfmt -i --indent 2 --max-blank-lines 2 --sort-imports --string-style s --comment-style s **/**/*.libsonnet

  schemas-download:cloudformation:
    deps: [install]
    cmds:
      - wget https://schema.cloudformation.eu-central-1.amazonaws.com/CloudformationSchema.zip -O schemas.zip
      - mkdir -p schemas/cloudformation
      - unzip -o schemas.zip -d schemas/cloudformation
    status:
      - test -d schemas
      - test -f schemas.zip

  generate:cloudformation:
    deps: ['schemas-download:cloudformation']
    cmds:
      - node .generator/new.js
      - task: format

  generate:asl:
    cmds:
      - node .generator/asl.js
      - task: format

  install:test:
    dir: 'tests'
    cmds:
      - jb install

  test:
    deps: [install:test]
    dir: 'tests'
    vars:
      TEST_FILE:
        sh: gfind -type f -name '*.test.jsonnet'
    cmds:
      - for: { var: TEST_FILE }
        cmd: jsonnet {{.ITEM}}
    env:
      JSONNET_PATH: "lib/:vendor/"
...
